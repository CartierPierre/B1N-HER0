2) Analyse des besoins
2.1) Liste des acteurs
L'utilisateur :
	L'utilisateur peut choisir la difficulté et la taille de la grille afin de résoudre un Takazu.
	Il pourra faire appel à un conseil qui lui indiquera la règle à appliquer ou une aide qui remplira
	une case par rapport à la solution. 
	Il peut sauvegarder la partie et la charger plus tard.
	L'utilisateur peut également consulter le classement du jeu (local et global) et ses statistiques.

2.2) Expression des besoins
	Le client souhaite disposer d'une application réalisée sous Ruby et l'interface
	graphique en GTK+.
	
	La résolution de grilles de Takuzu, selon les règles traditionnelles du jeu,
	avec possibilité de demander de l'aide si le joueur est bloqué. L'application
	doit pouvoir charger une partie précédente. L'utilisateur doit pouvoir passer en
	mode "hypothèse" permettant de formuler des hypothèses sur les cases et de restaurer
	l'état antérieur ou de valider les hypothèses.

2.3) Besoins fonctionnels

Résolution des grilles de Takuzu
	* Démarrer une partie
		L'utilisateur doit pouvoir choisir le niveau de difficulté et la
		taille de la grille.	
	* Lors d'une partie, le joueur peut demander de l'aide s'il se voit bloqué.
	  Deux niveaux d'aide sont disponibles :
		- Conseil qui énonce une régle applicable à la situation de jeu
		- Aide qui résoud une case par rapport à la solution

	* Sauvegarder la grille en cours
	 	L'application doit pouvoir gérer les sauvegardes des grilles en fonction
		du niveau de difficulté et de la taille de la grille. 
	* Charger une grille
		L'utilisateur doit pouvoir charger une grille à l'aide d'un menu
		de sauvegarde

2.4) Besoins non fonctionnels

	* Sérialisation des objects pour la persistance des données
		- L'application doit pouvoir sérialiser les grilles, le classement,
		  les options afin de pouvoir les récupérer au redémarrage de 
		  l'application

2.5) Fonctionnalités

	Le jeu
	Fonctionnalités
	Traitement/Persistance des données
	Sauvegarder/charger les options
	Sauvegarder/Charger/Supprimer une partie
	Sauvegarder/Charger les scores et les statistiques
	Crypter les données pour empêcher les modifications
	Jeu
	Jouer une partie
	Système d'aide

	* Jeu
		Aider le joueur : L'utilisateur doit pouvoir recevoir une aide du 
		logiciel dans le cas ou il est bloqué. 

		Jouer une partie : L'utilisateur doit pouvoir jouer une partie de
		Takuzu à l'aide de la souris. Les différentes interactions disponibles
		seront définies lors de la phase de conception.

	* Options
		Personnaliser les couleurs : L'utilisateur doit pouvoir modifier la couleur des cases
		
		Aide : L'utilisateur doit pouvoir activer ou désactiver les différentes aides

		Sélectioner une langue : L'utilisateur doit pouvoir changer la langue du jeu
		
	* Profil
		Creer un profil : L'utilisateur doit créer un profil avec son nom d'utilisateur lors
		du premier démarrage

		Consulter le profil : L'utilisateur doit pouvoir consulter ses statistiques, ses succès

		Supprimer le profil : L'utilisateur doit pouvoir supprimer son profil

		Reinitialiser le profil : L'utilisateur peut reinitialiser toutes les statistiques et
		succès de son profil		
		

	* Traitement et persistance des données
		Sauvegarder/Charger les options : Les choix de l'utilisateur concernant
		les options du jeu sont sauvegardées dans un fichier de configuration
	
		Sauvegarder/Charger/Supprimer une partie : L'utilisateur peut 
		sauvegarder une partie en cours afin de la reprendre ultérieurement.
		Lorsque le jeu quitte en pleine partie, le jeu lui propose de reprendre
		la partie précédente au démarrage. L'utilisateur peut également
		supprimer ses sauvegardes.

		Sauvegarder/Charger les scores : le jeu charge automatiquement les scores
		des différents joueurs au démarrage

		Crypter les données
		Les sauvegardes sont cryptées afin d'empecher la modification des
		sauvegardes

	* Traitement et persistance des données :
		Sauvegarder/Charger une grille : L'utilisateur doit pouvoir sauvegarder
		ses grilles en cours et si l'application quitte sans sauvegarder, le
		jeu se sauvegarde automatiquement à chaque mouvements

2.6) Cas d'utilisation

Acteur : L'utilisateur de l'application
Préalables : L'application doit être téléchargée
Conséquents : L'utilisateur peut exécuter l'application

1) Profil
	- L'utilisateur doit créer un profil lors de sa première connexion
	- L'utilisateur peut voir son profil, le supprimer et le réinitialiser
	- L'utilisateur peut consulter ses statistiques
2) Choix des options de jeu
	- L'utilisateur clique sur l'option "Nouvelle partie"
	- L'utilisateur choisit le niveau de difficulté 
	- L'utilisateur choisit la taille de la grille
	- Le système sélectionne une grille
	- Ajout d'un malus par conseils et aides utilisés
	- On considère que le timer est toujours mis en place
3) Résolution du Takuzu
	- L'utilisateur essaye de résoudre la grille
	- L'utilisateur peut utiliser l'option "Aide" et "Conseil" pour se débloquer
	- L'utilisateur peut utiliser l'option "Hypothèse" permettant de sauvegarder le contexte du jeu pour remplir les cases de façon temporaire
	- L'utilisateur peut ensuite valider l'hypothèse ou l'annuler pour revenir à l'état antérieur
	- Une fois la grille complète, le programme vérifie automatiquement celle-ci
	- Le système compare les valeurs du joueur avec la solution  
	- Affichage d'un message indiquant s'il y a correspondance (réussite) ou non
	  en fonctiob de la solution
	- S'il y a correspondance :
		- Enregistrement du temps mis pour terminer la grille et calcule
		du score
		- Affichage du classement pour cette grille
	- Sinon le joueur peut corriger et effectuer une autre validation par la suite, un
	malus sera appliqué à son score
	- Le système propose ensuite de retourner au menu principal
4) Configurer le jeu
	- L'utilisateur doit pouvoir sélectionner la langue
	- L'utilisateur peut personnaliser les couleurs des cases
	- L'utilisateur doit pouvoir activer ou désactiver l'aide
5) Actions sur les parties
	- L'utilisateur doit pouvoir reprendre une partie précédente
	- L'utilisateur peut sauvegarder une partie et en charger une

	
