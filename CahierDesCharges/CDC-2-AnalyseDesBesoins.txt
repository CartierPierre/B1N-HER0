2) Analyse des besoins
2.1) Liste des acteurs
L'utilisateur :  
	Peut choisir la difficulté et la taille de la grille.  
	Peut faire appel à une aide ou des conseils
	Peut sauvegarder la partie et la charger plus tard.  
	Peut consulter le classement du jeu (local par rapport aux profils sur le poste et global par rapport aux profils sur le serveur).  

2.2) Expression des besoins
	Le client souhaite disposer d'une application réalisée sous Ruby et l'interface
	graphique en GTK+.
	
	La résolution de grilles de Takuzu, selon les règles traditionnelles du jeu,
	avec possibilité de demander de l'aide si le joueur est bloqué. L'application
	doit pouvoir charger une partie précédente. L'utilisateur doit pouvoir passer en
	mode "hypothèse" permettant de formuler des hypothèses sur les cases et de restaurer
	l'état antérieur ou de valider les hypothèses.

2.3) Besoins fonctionnels

Résolution des grilles de Takuzu
	* Démarrer une partie
		L'utilisateur doit pouvoir choisir le niveau de difficulté et la
		taille de la grille.	
	* Lors d'une partie, le joueur peut demander de l'aide s'il se voit bloqué.
	  Deux niveaux d'aide sont disponibles :
		- Conseil qui énonce une régle applicable à la situation de jeu
		- Aide qui résoud une case par rapport à la solution

	* Sauvegarder la grille en cours
	 	L'application doit pouvoir gérer les sauvegardes des grilles en fonction
		du niveau de difficulté et de la taille de la grille. 
	* Charger une grille
		L'utilisateur doit pouvoir charger une grille à l'aide d'un menu
		de sauvegarde

2.4) Besoins non fonctionnels

	* Sérialisation des objects pour la persistance des données
		- L'application doit pouvoir sérialiser les grilles, le classement,
		  les options afin de pouvoir les récupérer au redémarrage de 
		  l'application à l'aide de la sérialisation Marshal

2.5) Fonctionnalités

* Jeu (FP100)
Jouer une partie (FS101) :  
L'utilisateur doit pouvoir jouer une partie de Takuzu à l'aide de la souris. 
Les différentes interactions disponibles seront définies lors de la phase de 
conception. 

Utiliser l'aide (FS102) :  
L'utilisateur doit pouvoir recevoir une aide du logiciel dans le cas ou il est 
bloqué.  

* Options (FP200)
Personnaliser l'interface (FS201) :  
L'utilisateur doit pouvoir modifier la couleur des cases  
  
Gérer les aides (FS202) :  
L'utilisateur doit pouvoir activer ou désactiver les différentes aides  
 
Changer la langue (FS203) :  
L'utilisateur doit pouvoir changer la langue du jeu 
  
* Profil (FP300)
Créer un profil (FS301) :  
L'utilisateur doit créer un profil avec son nom d'utilisateur lors du premier 
démarrage  

Supprimer un profil (FS302) :  
L'utilisateur doit pouvoir supprimer son profil  

Réinitialiser un profil (FS303) :  
L'utilisateur peut réinitialiser toutes les statistiques et succès de son profil   
 
Consulter un profil (FS304) :  
L'utilisateur doit pouvoir consulter ses statistiques, ses succès  
 
* Traitement / Persistance des données (FP400)
Sauvegarder une partie (FS401) : 
L'utilisateur peut sauvegarder une partie en cours afin de la reprendre 
ultérieurement.  
 
Charger une partie (FS402) : 
L’utilisateur peut charger une partie parmi celles sauvegardées. 
 
Supprimer une sauvegarde (FS403) : 
L'utilisateur peut supprimer des parties parmi celles sauvegardés. 
 
 
2.6 Cas d'utilisation
 
Cas d'utilisation n°1  
Nom : Résolution Takuzu  
Description : L'utilisateur tente de résoudre une grille de Takuzu  
Acteur : L'utilisateur de l'application  
Préalables : L'application doit être téléchargée  
Conséquents : L'utilisateur peut exécuter l'application  
 
1) Choix des options
 
­ L'utilisateur clique sur l'option "Nouvelle partie"  
­ L'utilisateur choisit le niveau de difficulté  
­ L'utilisateur choisit la taille de la grille  
­ Le système sélectionne une grille  
­ Ajout d'un malus par conseil utilisé  
­ On considère que le timer est toujours mis en place  
 
2) Résolution du Takuzu
 
­ L'utilisateur essaye de résoudre la grille  
­ L'utilisateur peut utiliser l'option "Aide" et "Conseil" pour se débloquer  
­ Une fois la grille complète, le programme vérifie automatiquement celle­ci  
­ Le système compare les valeurs du joueur avec la solution   
8/11 ­
­
Affichage d'un message indiquant s'il y a correspondence (réussite) ou non en 
fonction de la solution  
­ S'il y a correspondence :  
­ Enregistrement du temps mis pour terminer la grille et calcul du 
score  
­ Affichage du classement pour cette grille  
­ Sinon le joueur peut corriger et effectuer une autre validation par la suite, 
un malus sera appliqué à son score  
Le système propose ensuite de retourner au menu principal

	
